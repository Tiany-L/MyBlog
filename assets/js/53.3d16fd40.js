(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{316:function(t,v,e){"use strict";e.r(v);var s=e(10),r=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"简单说下对vue的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单说下对vue的理解"}},[t._v("#")]),t._v(" 简单说下对vue的理解")]),t._v(" "),v("p",[v("strong",[t._v("渐进式JavaScript框架")])]),t._v(" "),v("p",[t._v("Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。")]),t._v(" "),v("p",[v("strong",[t._v("易用性")])]),t._v(" "),v("p",[t._v("vue提供数据响应式、声明式模板语法和基于配置的组件系统等核心特性。这些使我们只需要关注应用的核心业务即可，只要会写js、html和css就能轻松编写vue应用。")]),t._v(" "),v("p",[v("strong",[t._v("灵活性")])]),t._v(" "),v("p",[t._v("渐进式框架的最大优点就是灵活性，如果应用足够小，我们可能仅需要vue核心特性即可完成功能；随着应用规模不断扩大，我们才可能逐渐引入路由、状态管理、vue-cli等库和工具，不管是应用体积还是 学习难度都是一个逐渐增加的平和曲线。")]),t._v(" "),v("p",[v("strong",[t._v("高效性")])]),t._v(" "),v("p",[t._v("超快的虚拟 DOM 和 diff 算法使我们的应用拥有最佳的性能表现。追求高效的过程还在继续，vue3中引入Proxy对数据响应式改进以及编译器中对于静态内容编译的改进都会让vue更加高效。")])])}),[],!1,null,null,null);v.default=r.exports}}]);